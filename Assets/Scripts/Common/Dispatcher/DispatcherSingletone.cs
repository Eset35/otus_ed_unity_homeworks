using System;
using System.Collections.Generic;
using UnityEngine;

namespace ShootEmUp.Common.Dispatcher
{
    public class DispatcherSingletone : MonoBehaviour
    {
        private static DispatcherSingletone _instance;
        private static bool _queued = false;
        private static List<Action> _backlog = new List<Action>();
        private static List<Action> _actions = new List<Action>();

        public static void RunOnMainThread(Action action)
        {
            lock (_backlog)
            {
                _backlog.Add(action);
                _queued = true;
            }
        }

        [RuntimeInitializeOnLoadMethod(RuntimeInitializeLoadType.BeforeSceneLoad)]
        private static void Initialize()
        {
            if (_instance == null)
            {
                _instance = new GameObject("Dispatcher(AutoGenerated)").AddComponent<DispatcherSingletone>();
                DontDestroyOnLoad(_instance.gameObject);
            }
        }

        private void LateUpdate()
        {
            if (_queued)
            {
                lock (_backlog)
                {
                    (_actions, _backlog) = (_backlog, _actions);
                    _queued = false;
                    _backlog.Clear();
                }

                for (int i = 0; i < _actions.Count; i++)
                {
                    _actions[i]();
                }

                _actions.Clear();
            }
        }
    }
}